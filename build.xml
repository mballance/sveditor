
<project name="SVEditor Feature">
    <property environment="env"/>

    <!-- Import the version info -->
    <property file="sveditor.info"/>

    <property name="eclipse.home" location="${env.ECLIPSE_HOME}"/>
    <property name="eclipsec"  location="${env.ECLIPSE_HOME}/eclipse"/>
    <property name="feature.version" value="${version}"/>
    <property name="feature.id"      value="net.sf.sveditor"/>

    <!-- Options used by the Eclipse build -->
    <property name="buildLabel" value=""/>
    <property name="buildId" value="${feature.version}"/>
    <property name="type" value="feature"/>

    <!-- build.qualifier -->
    <property name="forceContextQualifier" value="0"/> 
    <property name="configs" value="${os}, ${ws}, ${arch}"/>
    <property name="buildDirectory"   value="${basedir}/build"/>
    <property name="archivePrefix"    value=""/>
    <property name="outputUpdateJars" value="true"/>


    <!-- Compiler Options -->
    <property name="javacDebugInfo"   value="true"/>
<!--
  -->
    <property name="javacFailOnError" value="true"/>
    <property name="javacSource"      value="1.5"/>
    <property name="javacTarget"      value="1.5"/>
    <property name="compilerarg"      value="-g"/>
<!--
    <property name="compilerArg"      value="-warn:-discouraged -g:lines"/>
  -->

    <property name="srcdir" value="${basedir}"/>
    <property name="repository" value="${basedir}/archive_tmp/repository"/>

    <taskdef name="xmltask"
        classname="com.oopsconsultancy.xmltask.ant.XmlTask">
      <classpath path="${basedir}/scripts/xmltask.jar"/>
    </taskdef>
        

    <target name="build" depends="compile, mkarchive"/>

    <target name="mkupdate" depends="build">
        <mkdir dir="${basedir}/release/update_site"/>

        <unzip src="${basedir}/sveditor-${feature.version}.jar"
               dest="${basedir}/release/update_site"/>

    </target>


    <target name="release" depends="mkupdate, mksrc">
        <mkdir dir="${basedir}/release"/>
       
        <!-- Create the release fragment file -->
        <copy todir="${basedir}/release" overwrite="true">
            <fileset dir="${srcdir}/etc"
                includes="new_release_fragment.xml"/>
            <filterset begintoken="1" endtoken="3">
                <filter token=".2." value="${feature.version}"/>
            </filterset>
            <filterset>
                <filter token="frs_update_site_dir" value="${frs_update_site_dir}"/>
            </filterset>
        </copy>

        <exec executable="/bin/sh">
            <arg value="scripts/upload_release.sh"/>
        </exec>

        <delete dir="${basedir}/release"/> 
        <delete dir="${buildDirectory}"/>
    </target>

    <target name="compile"> 
        <delete dir="${buildDirectory}"/>
        <mkdir dir="${buildDirectory}"/>
        <copy todir="${buildDirectory}">
            <fileset dir="${srcdir}">
                <include name="plugins/**"/>
                <include name="features/**"/>
                <exclude name="**/*.svn/**"/>
                <exclude name="**/*.git/**"/>
            </fileset>
        </copy>
        <copy todir="${buildDirectory}" overwrite="true">
            <fileset dir="${srcdir}" 
                includes="features/**/*.xml, plugins/**/*.xml, plugins/**/*.MF, plugins/**/*.properties"/>
            <filterset begintoken="1" endtoken="3">
                <filter token=".2." value="${feature.version}"/>
            </filterset>
        </copy>
        <eclipse.buildScript
            elements="${type}@${feature.id}"
            buildDirectory="${buildDirectory}"
            baseLocation="${eclipse.home}"
            configInfo="${configs}"
            forceContextQualifier="${forceContextQualifier}"
            generateFeatureVersionSuffix="true"/>
        <ant antfile="${buildDirectory}/features/${feature.id}/build.xml"
            dir="${buildDirectory}/features/${feature.id}"
            target="build.jars"/>
        <ant antfile="${buildDirectory}/assemble.${feature.id}.${os}.${ws}.${arch}.xml"
             dir="${buildDirectory}"/>
    </target>

    <target name="mksrc">
        <exec executable="/bin/sh">
            <arg value="scripts/mksrc.sh"/>
        </exec>
    </target>

    <!-- ************************************************************
         * mkarchive
         *
         * Build an archived update site of the release
         ************************************************************ -->
    <target name="mkarchive">
        <delete dir="${basedir}/archive_tmp"/>
        <mkdir dir="${basedir}/archive_tmp"/>
        <mkdir dir="${basedir}/archive_tmp/features"/>
        <mkdir dir="${basedir}/archive_tmp/plugins"/>

        <ant antfile="${buildDirectory}/features/${feature.id}/build.xml"
            dir="${buildDirectory}/features/${feature.id}"
            target="build.update.jar">
            <property name="feature.destination" value="${basedir}/archive_tmp/features"/>
            <property name="plugin.destination" value="${basedir}/archive_tmp/plugins"/>
        </ant>

        <copy todir="${basedir}/archive_tmp">
            <fileset dir="${basedir}/features/${feature.id}">
                <include name="category.xml"/>
            </fileset>
            <filterset begintoken="1" endtoken="3">
                <filter token=".2." value="${feature.version}"/>
            </filterset>
        </copy>

        <!-- Create the P2 repository -->
        <p2.publish.featuresAndBundles
            metadataRepository="file:${repository}"
            artifactRepository="file:${repository}"
            publishArtifacts="true"
            compress="false"
            source="${basedir}/archive_tmp"/>

        <!-- Categorize the items in the repository -->
        <exec executable="${eclipsec}" failonerror="true">
            <arg value="-console"/>
            <arg value="-consoleLog"/>
            <arg value="-nosplash"/>
            <arg value="-application"/>
            <arg value="org.eclipse.equinox.p2.publisher.CategoryPublisher"/>
            <arg value="-metadataRepository"/>
            <arg value="file:/${repository}"/>
            <arg value="-categoryDefinition"/>
            <arg value="file:/${basedir}/archive_tmp/category.xml"/>
            <arg value="-categoryQualifier"/>
        </exec>
       
<!-- Is this still needed?
        <jar destfile="${basedir}/archive_tmp/repository/category.jar"
             basedir="${basedir}/archive_tmp"
             includes="category.xml"/>
 -->

        <jar destfile="${basedir}/sveditor-${feature.version}.jar"
             basedir="${repository}"
             includes="*.jar, features/**, plugins/**"/>

        <xmltask source="${basedir}/etc/mappings.xml">
            <copy path="/repository/mappings" 
                  buffer="artifacts_mappings"/>
        </xmltask>
                  
        <xmltask source="${repository}/artifacts.xml"
                 dest="${repository}/artifacts_1.xml">
            <remove path="/repository/mappings"/>
            <insert path="/repository/properties" position="after"
                file="${basedir}/etc/mappings.xml"/>
        </xmltask>

        <move file="${repository}/artifacts_1.xml"
              tofile="${repository}/artifacts.xml"/>

        <zip destfile="${repository}/artifacts.jar"
             basedir="${repository}" includes="artifacts.xml"/>
        <zip destfile="${repository}/content.jar"
             basedir="${repository}" includes="content.xml"/>
        <delete>
            <fileset dir="${repository}" includes="*.xml"/>
        </delete>

        <delete dir="${basedir}/archive_tmp"/>
    </target>

</project>


