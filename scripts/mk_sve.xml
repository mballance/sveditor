<project name="mk_sve" default="mk_sve">
	
	<property name="sve_srcdir" value="${basedir}/../sve"/>
	<property environment="env"/>
	
	<!-- Import the version info -->
	<property file="${basedir}/../sveditor.info"/>
	<property environment="env"/>
	<property name="feature.version" value="${version}"/>

	<property name="eclipse.home" location="${env.ECLIPSE_HOME}"/>
	<condition property="eclipsec" 
		value="${env.ECLIPSE_HOME}/eclipsec" 
		else="${env.ECLIPSE_HOME}/eclipse">
		<os family="windows"/>
	</condition>

	<property name="mpc_repository" location="${env.SVE_ADDINS}/mpc"/>
	<property name="equinox_repository" location="${env.SVE_ADDINS}/equinox"/>

	<property name="buildRoot" location="${basedir}/../buildRoot"/>
	<property name="buildRun" location="${buildRoot}/buildRun"/>
	<property name="build" location="${buildRoot}/build"/>
	<property name="buildResult" location="${basedir}/../buildResult"/>
	<property name="sveditor" location="${buildRoot}/sveditor"/>
	<property name="builder" value="${buildRoot}/builder"/>
	<property name="installerTmp" value="${basedir}/../installerTmp"/>

	<property file="${basedir}/mk_sve.properties"/>
	<property file="${basedir}/mk_sve_${os}.properties"/>
	<property name="eclipse.home" location="${env.ECLIPSE_HOME}"/>

	<condition property="is_win">
		<os family="windows"/>
	</condition>
	
	<condition property="build_ws" value="win32" else="gtk">
		<os family="windows"/>
	</condition>
	<condition property="build_arch" value="x86_64" else="x86">
		<os arch="amd64"/>
	</condition>		

	<target name="mk_sve" depends="mk_sve-pre,build_release,build_archive">
		<antcall target="mk_msi"/>
	</target>

	<target name="mk_sve-pre">
		<delete dir="${buildResult}"/>
	</target>

	<target name="build_release">
		<ant antfile="${basedir}/build.xml" inheritall="false">
			<!-- It's necessary to specify some WS/Arch for build
			 	 Since SVEditor isn't tied to either, doesn't really matter
			  -->
			<property name="ws" value="${build_ws}"/>
			<property name="arch" value="${build_arch}"/>
		</ant>
	</target>

	<!--
          ** Create installers for Windows x86 and x86_64
	  -->
	<target name="mk_msi" if="is_win">
		<delete dir="${installerTmp}"/>
		<mkdir dir="${installerTmp}"/>
		<unzip dest="${installerTmp}">
			<fileset dir="${buildResult}">
				<include name="sve-${sve_version}-${os}_x86_64.zip"/>
			</fileset>
		</unzip>
		<ant antfile="${basedir}/mk_msi.xml" 
			dir="${installerTmp}/sve-${sve_version}" inheritall="false">
			<property name="script.dir" value="${basedir}"/>
			<property name="etc.dir" value="${basedir}/../etc"/>
			<property name="ProgramFilesFolder" 
				value="ProgramFiles64Folder"/>
			<property name="dest" 
				value="${buildResult}/sve-${sve_version}-x64.msi"/>
			<property name="arch" value="x64"/>
			<property name="Win64" value="yes"/>
		</ant>
		<delete dir="${installerTmp}"/>
		<mkdir dir="${installerTmp}"/>
		<unzip dest="${installerTmp}">
			<fileset dir="${buildResult}">
				<include name="sve-${sve_version}-${os}_x86.zip"/>
			</fileset>
		</unzip>
		<ant antfile="${basedir}/mk_msi.xml" 
			dir="${installerTmp}/sve-${sve_version}" inheritall="false">
			<property name="script.dir" value="${basedir}"/>
			<property name="etc.dir" value="${basedir}/../etc"/>
			<property name="dest" 
				value="${buildResult}/sve-${sve_version}-x86.msi"/>
			<property name="arch" value="x86"/>
			<property name="Win64" value="no"/>
		</ant>
		<delete dir="${installerTmp}"/>
	</target>

	<target name="build_archive">
		<delete dir="${buildRoot}"/> 
		<mkdir dir="${buildRoot}"/> 
		<mkdir dir="${buildRun}"/> 
		<mkdir dir="${build}"/> 
		<mkdir dir="${sveditor}"/> 
		<mkdir dir="${sveditor}/eclipse"/> 
		<property name="baseLocation" value="${eclipse.home}"/>
		<copy todir="${build}">
			<fileset dir="${sve_srcdir}">
				<include name="plugins/**"/>
				<include name="features/**"/>
				<exclude name="**/*.svn/**"/>
				<exclude name="**/*.git/**"/>
			</fileset>
		</copy>
		<copy todir="${build}" overwrite="true">
			<fileset dir="${sve_srcdir}">
				<include name="features/**/*.xml"/>
				<include name="features/**/*.product"/>
				<include name="plugins/**/*.xml"/>
				<include name="plugins/**/*.MF"/>
				<include name="plugins/**/*.properties"/>
			</fileset>
			<filterset begintoken="1" endtoken="3">
				<filter token=".2." value="${feature.version}"/>
			</filterset>
		</copy>
		<unzip dest="${sveditor}/eclipse">
			<fileset dir="${buildResult}">
				<include name="sveditor-feature-${feature.version}.zip"/>
			</fileset>
		</unzip> 
		
		<copy file="${basedir}/mk_sve_1.xml" todir="${buildRun}"/>
		<ant antfile="${buildRun}/mk_sve_1.xml" dir="${buildRun}"/>

		<copy todir="${buildResult}">
			<fileset dir="${build}/I.sve">
				<include name="*.zip"/>
			</fileset>
		</copy>

		<antcall target="win_zip"/>
		<antcall target="linux_zip"/>

		<delete dir="${buildRoot}"/>
	</target>

	<target name="win_zip" if="is_win">
		<antcall target="install_addins">
			<param name="c_os" value="win32"/>
			<param name="c_ws" value="win32"/>
			<param name="c_arch" value="x86"/>
		</antcall>

		<antcall target="install_addins">
			<param name="c_os" value="win32"/>
			<param name="c_ws" value="win32"/>
			<param name="c_arch" value="x86_64"/>
		</antcall>
	</target>

	<target name="linux_zip" unless="is_win">
		<antcall target="install_addins">
			<param name="c_os" value="linux"/>
			<param name="c_ws" value="gtk"/>
			<param name="c_arch" value="x86_64"/>
		</antcall>

		<antcall target="install_addins">
			<param name="c_os" value="linux"/>
			<param name="c_ws" value="gtk"/>
			<param name="c_arch" value="x86"/>
		</antcall>
	</target>

	<target name="install_addins">
		<delete dir="${buildResult}/sveditor"/>
		<unzip dest="${buildResult}" 
                    src="${buildResult}/sve-${c_os}.${c_ws}.${c_arch}.zip"/>
		<unzip dest="${buildResult}/sveditor" 
                    src="${buildResult}/sveditor-${feature.version}.jar"/>

		<exec executable="${eclipsec}" failonerror="true">
			<arg value="-console"/>
			<arg value="-consoleLog"/>
			<arg value="-nosplash"/>
			<arg value="-application"/>
			<arg value="org.eclipse.equinox.p2.director"/>
			<arg value="-installIU"/>
			<arg value="net.sf.sveditor.feature.group"/>
			<arg value="-repository"/>
			<arg value="file://${buildResult}/sveditor"/>
			<arg value="-tag"/>
			<arg value="AddSVE"/>
			<arg value="-destination"/>
			<arg value="${buildResult}/sve-${sve_version}"/>
		</exec>
		<exec executable="${eclipsec}" failonerror="true">
			<arg value="-console"/>
			<arg value="-consoleLog"/>
			<arg value="-nosplash"/>
			<arg value="-application"/>
			<arg value="org.eclipse.equinox.p2.director"/>
			<arg value="-installIU"/>
			<arg value="org.eclipse.equinox.p2.discovery.feature.feature.group"/>
			<arg value="-repository"/>
			<arg value="file://${equinox_repository}"/>
			<arg value="-tag"/>
			<arg value="AddSVE"/>
			<arg value="-destination"/>
			<arg value="${buildResult}/sve-${sve_version}"/>
		</exec>
		<exec executable="${eclipsec}" failonerror="true">
			<arg value="-console"/>
			<arg value="-consoleLog"/>
			<arg value="-nosplash"/>
			<arg value="-application"/>
			<arg value="org.eclipse.equinox.p2.director"/>
			<arg value="-installIU"/>
			<arg value="org.eclipse.epp.mpc.feature.group"/>
			<arg value="-repository"/>
			<arg value="file://${mpc_repository}"/>
			<arg value="-tag"/>
			<arg value="AddSVE"/>
			<arg value="-destination"/>
			<arg value="${buildResult}/sve-${sve_version}"/>
		</exec>
		<delete file="${buildResult}/sve-${c_os}.${c_ws}.${c_arch}.zip"/>
		<antcall target="tar_unix"/>
		<antcall target="zip_windows"/>
		<delete dir="${buildResult}/sve-${sve_version}"/>
		<delete dir="${buildResult}/sveditor"/>
	</target>

	<target name="tar_unix" unless="is_win">
		<exec executable="chmod" dir="${buildResult}/sve-${sve_version}">
			<arg value="+x"/>
			<arg value="sve"/>
		</exec>
		<exec executable="tar" dir="${buildResult}" failonerror="true">
			<arg value="czf"/>
			<arg value="sve-${sve_version}-${c_os}_${c_arch}.tar.gz"/>
			<arg value="sve-${sve_version}"/>
		</exec>
	</target>

	<target name="zip_windows" if="is_win">
		<zip destfile="${buildResult}/sve-${sve_version}-${c_os}_${c_arch}.zip"
			basedir="${buildResult}" includes="sve-${sve_version}/**">
		</zip>
	</target>

</project>
